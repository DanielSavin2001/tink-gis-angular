{"version":3,"sources":["../../../src/scripts/services/mapService.js"],"names":[],"mappings":"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","file":"mapService.js","sourcesContent":["'use strict';\r\n(function () {\r\n    var module;\r\n    try {\r\n        module = angular.module('tink.gis');\r\n    } catch (e) {\r\n        module = angular.module('tink.gis', ['tink.accordion', 'tink.tinkApi', 'tink.modal']); //'leaflet-directive'\r\n    }\r\n    var mapService = function ($rootScope, MapData, map, ThemeHelper, $q, GISService, WMSService, ResultsData) {\r\n        var _mapService = {};\r\n        _mapService.Identify = function (event, tolerance) {\r\n            if (typeof tolerance === 'undefined') { tolerance = 10; }\r\n            _.each(MapData.Themes, function (theme) {\r\n                theme.RecalculateVisibleLayerIds();\r\n                var identifOnThisTheme = true;\r\n                if (theme.VisibleLayerIds.length === 1 && theme.VisibleLayerIds[0] === -1) {\r\n                    identifOnThisTheme = false; // we moeten de layer niet qryen wnnr er geen vis layers zijn\r\n                }\r\n                if (identifOnThisTheme) {\r\n                    switch (theme.Type) {\r\n                        case ThemeType.ESRI:\r\n                            var layersVoorIdentify = 'visible: ' + theme.VisibleLayerIds;\r\n                            ResultsData.Loading++;\r\n                            theme.MapData.identify().on(map).at(event.latlng).layers(layersVoorIdentify).tolerance(tolerance).run(function (error, featureCollection) {\r\n                                ResultsData.Loading--;\r\n                                MapData.AddFeatures(featureCollection, theme);\r\n                            });\r\n                            break;\r\n                        case ThemeType.WMS:\r\n                            var layersVoorIdentify = theme.VisibleLayerIds;\r\n                            theme.VisibleLayers.forEach(lay => {\r\n                                console.log(lay);\r\n                                if (lay.queryable == true) {\r\n\r\n                                    ResultsData.Loading++;\r\n                                    theme.MapData.getFeatureInfo(event.latlng, lay.name).success(function (data, status, xhr) {\r\n                                        ResultsData.Loading--;\r\n                                        console.log(\"minus\");\r\n                                        var xmlstring = JXON.xmlToString(data);\r\n                                        var returnjson = JXON.stringToJs(xmlstring);\r\n                                        var processedjson = null;\r\n                                        if (returnjson.featureinforesponse) {\r\n                                            processedjson = returnjson.featureinforesponse.fields;\r\n                                        }\r\n                                        var returnitem = {\r\n                                            type: \"FeatureCollection\",\r\n                                            features: []\r\n                                        }\r\n                                        if (processedjson) {\r\n                                            var featureArr = [];\r\n                                            if (typeof processedjson === \"object\") {\r\n                                                featureArr.push(processedjson)\r\n                                            } else {\r\n                                                featureArr = processedjson;\r\n                                            }\r\n\r\n                                            featureArr.forEach(feat => {\r\n                                                var tmpitem = {\r\n                                                    layerName: lay.name,\r\n                                                    name: lay.name,\r\n                                                    layerId: lay.name,\r\n                                                    properties: feat,\r\n                                                    type: \"Feature\"\r\n                                                }\r\n                                                returnitem.features.push(tmpitem);\r\n                                            });\r\n                                            console.log(lay.name + \" item info: \");\r\n                                            console.log(returnitem);\r\n                                            MapData.AddFeatures(returnitem, theme);\r\n                                        }\r\n                                        else {\r\n                                            // we must still apply for the loading to get updated\r\n                                            $rootScope.$apply();\r\n                                        }\r\n\r\n                                    });\r\n                                }\r\n\r\n                            });\r\n                            break;\r\n                        default:\r\n                            console.log(\"UNKNOW TYPE!!!!:\");\r\n                            console.log(Theme.Type);\r\n                            break;\r\n                    }\r\n                }\r\n\r\n\r\n            });\r\n        };\r\n\r\n        _mapService.Select = function (event) {\r\n            if (MapData.SelectedLayer.id == '') { // alle layers selected\r\n                MapData.Themes.filter(x => x.Type == ThemeType.ESRI).forEach(theme => { // dus doen we de qry op alle lagen.\r\n                    ResultsData.Loading++;\r\n                    theme.MapData.identify().on(map).at(event.latlng).layers('visible: ' + theme.VisibleLayerIds).run(function (error, featureCollection) {\r\n                        ResultsData.Loading--;\r\n                        MapData.AddFeatures(featureCollection, theme);\r\n\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                ResultsData.Loading++;\r\n                MapData.SelectedLayer.theme.MapData.identify().on(map).at(event.latlng).layers('visible: ' + MapData.SelectedLayer.id).run(function (error, featureCollection) {\r\n                    ResultsData.Loading--;\r\n                    MapData.AddFeatures(featureCollection, MapData.SelectedLayer.theme);\r\n\r\n                });\r\n            }\r\n\r\n        };\r\n        _mapService.WatIsHier = function (event) {\r\n            GISService.ReverseGeocode(event);\r\n        };\r\n\r\n        _mapService.Query = function (event) {\r\n            if (MapData.SelectedLayer.id == '') { // alle layers selected\r\n                MapData.Themes.forEach(theme => { // dus doen we de qry op alle lagen.\r\n                    if (theme.Type === ThemeType.ESRI) {\r\n                        theme.VisibleLayers.forEach(lay => {\r\n                            ResultsData.Loading++;\r\n                            theme.MapData.query()\r\n                                .layer(lay.id)\r\n                                .intersects(event.layer)\r\n                                .run(function (error, featureCollection, response) {\r\n                                    ResultsData.Loading--;\r\n                                    MapData.AddFeatures(featureCollection, theme, lay.id);\r\n                                });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                ResultsData.Loading++;\r\n                MapData.SelectedLayer.theme.MapData.query()\r\n                    .layer(MapData.SelectedLayer.id)\r\n                    .intersects(event.layer)\r\n                    .run(function (error, featureCollection, response) {\r\n                        ResultsData.Loading--;\r\n                        MapData.AddFeatures(featureCollection, MapData.SelectedLayer.theme, MapData.SelectedLayer.id);\r\n                    });\r\n            }\r\n        };\r\n        _mapService.UpdateThemeStatus = function (theme) {\r\n            _.each(theme.Groups, function (layerGroup) {\r\n                _mapService.UpdateGroupLayerStatus(layerGroup, theme);\r\n            });\r\n            _.each(theme.Layers, function (layer) {\r\n                _mapService.UpdateLayerStatus(layer, theme);\r\n            });\r\n\r\n        };\r\n        _mapService.UpdateGroupLayerStatus = function (groupLayer, theme) {\r\n            _.each(groupLayer.Layers, function (childlayer) {\r\n                _mapService.UpdateLayerStatus(childlayer, theme);\r\n            });\r\n        };\r\n\r\n        _mapService.UpdateLayerStatus = function (layer, theme) {\r\n            var visibleOnMap = theme.Visible && layer.visible && ((layer.parent && layer.parent.visible) || !layer.parent);\r\n            var indexOfLayerInVisibleLayers = theme.VisibleLayers.indexOf(layer);\r\n            if (visibleOnMap) {\r\n                if (indexOfLayerInVisibleLayers === -1 && layer.enabled) { // alleen maar toevoegen wnnr layer enabled en niet aanwezig al in de array!\r\n                    theme.VisibleLayers.push(layer);\r\n                    if (theme.Type == ThemeType.ESRI) {\r\n                        MapData.VisibleLayers.push(layer);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (indexOfLayerInVisibleLayers > -1) {\r\n                    theme.VisibleLayers.splice(indexOfLayerInVisibleLayers, 1);\r\n                    if (theme.Type == ThemeType.ESRI) {\r\n                        var indexOfLayerInVisibleLayersOfMap = MapData.VisibleLayers.indexOf(layer);\r\n                        MapData.VisibleLayers.splice(indexOfLayerInVisibleLayersOfMap, 1);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        return _mapService;\r\n    };\r\n    module.$inject = ['$rootScope', 'MapData', 'map', 'ThemeHelper', '$q', 'GISService', 'WMSService', 'ResultsData'];\r\n    module.factory('MapService', mapService);\r\n})();\r\n\r\n\r\n"]}