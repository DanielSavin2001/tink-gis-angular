{"version":3,"sources":["../../../src/scripts/services/layerManagementService.js"],"names":[],"mappings":";;AAEA;;AACA,CAAC,YAAW;AACR,QAAI,SAAS,QAAQ,MAAR,CAAe,UAAf,CAAT,CADI;AAER,QAAI,UAAU,SAAV,OAAU,CAAS,OAAT,EAAkB,KAAlB,EAAyB,EAAzB,EAA6B,UAA7B,EAAyC,WAAzC,EAAsD;AAChE,YAAI,WAAW,EAAX,CAD4D;AAEhE,iBAAS,aAAT,GAAyB,EAAzB,CAFgE;AAGhE,iBAAS,eAAT,GAA2B,EAA3B,CAHgE;AAIhE,iBAAS,WAAT,GAAuB,UAAS,IAAT,EAAe;AAClC,gBAAI,WAAW,EAAX,CAD8B;AAElC,cAAE,IAAF,CAAO,IAAP,EAAa,UAAS,GAAT,EAAc;AACvB,oBAAI,oBAAoB,IAApB,CADmB;AAEvB,yBAAS,aAAT,CAAuB,OAAvB,CAA+B,iBAAS;;AACpC,wBAAI,MAAM,QAAN,IAAkB,GAAlB,EAAuB;AACvB,4CAAoB,KAApB,CADuB;qBAA3B;iBAD2B,CAA/B,CAFuB;AAOvB,oBAAI,qBAAqB,IAArB,EAA2B;;AAC3B,wBAAI,OAAO,WAAW,YAAX,CAAwB,MAAM,UAAN,CAA/B,CADuB;AAE3B,yBAAK,OAAL,CAAa,UAAS,IAAT,EAAe,UAAf,EAA2B,OAA3B,EAAoC,OAApC,EAA6C;AACtD,4BAAI,iBAAiB,YAAY,mBAAZ,CAAgC,IAAhC,EAAsC,OAAtC,CAAjB,CADkD;AAEtD,iCAAS,eAAT,CAAyB,IAAzB,CAA8B,cAA9B,EAFsD;AAGtD,uCAAe,MAAf,GAAwB,YAAY,GAAZ,CAH8B;qBAA7C,CAAb,CAF2B;AAO3B,6BAAS,IAAT,CAAc,IAAd,EAP2B;iBAA/B,MASK;;AACD,sCAAkB,MAAlB,GAA2B,YAAY,UAAZ,CAD1B;AAED,6BAAS,eAAT,CAAyB,IAAzB,CAA8B,iBAA9B,EAFC;iBATL;aAPS,CAAb;;;;AAFkC,mBA0B3B,GAAG,GAAH,CAAO,QAAP,CAAP,CA1BkC;SAAf,CAJyC;AAgChE,iBAAS,qBAAT,GAAiC,UAAS,KAAT,EAAgB;AAC7C,gBAAI,OAAO,WAAW,iBAAX,CAA6B,MAAM,QAAN,CAApC,CADyC;AAE7C,iBAAK,OAAL,CAAa,UAAS,IAAT,EAAe,UAAf,EAA2B,OAA3B,EAAoC,OAApC,EAA6C;AACtD,sBAAM,SAAN,CAAgB,OAAhB,CAAwB,iBAAS;AAC7B,wBAAI,UAAU,MAAM,EAAN,CADe;AAE7B,wBAAI,YAAY,KAAK,MAAL,CAAY,OAAZ,CAAZ,CAFyB;AAG7B,0BAAM,YAAN,GAAqB,UAAU,YAAV,CAHQ;AAI7B,0BAAM,MAAN,GAAe,UAAU,MAAV,CAJc;iBAAT,CAAxB,CADsD;aAA7C,CAAb,CAF6C;SAAhB,CAhC+B;AA2ChE,eAAO,QAAP,CA3CgE;KAAtD,CAFN;AA+CR,WAAO,OAAP,GAAiB,CAAC,SAAD,EAAY,OAAZ,EAAqB,IAArB,EAA2B,YAA3B,EAAyC,aAAzC,CAAjB,CA/CQ;AAgDR,WAAO,OAAP,CAAe,wBAAf,EAAyC,OAAzC,EAhDQ;CAAX,CAAD","file":"layerManagementService.js","sourcesContent":["/// <reference path=\"../../../typings/tsd.d.ts\"/>\r\n\r\n'use strict';\r\n(function() {\r\n    var module = angular.module('tink.gis');\r\n    var service = function(MapData, $http, $q, GISService, ThemeHelper) {\r\n        var _service = {};\r\n        _service.EnabledThemes = [];\r\n        _service.AvailableThemes = [];\r\n        _service.ProcessUrls = function(urls) {\r\n            var promises = [];\r\n            _.each(urls, function(url) {\r\n                var AlreadyAddedTheme = null;\r\n                _service.EnabledThemes.forEach(theme => { // OPTI kan paar loops minder door betere zoek in array te doen\r\n                    if (theme.CleanUrl == url) {\r\n                        AlreadyAddedTheme = theme;\r\n                    }\r\n                });\r\n                if (AlreadyAddedTheme == null) { // if we didn t get an alreadyadderdtheme we get the data\r\n                    var prom = GISService.GetThemeData(url + '?f=pjson');\r\n                    prom.success(function(data, statuscode, functie, getdata) {\r\n                        var convertedTheme = ThemeHelper.createThemeFromJson(data, getdata);\r\n                        _service.AvailableThemes.push(convertedTheme);\r\n                        convertedTheme.status = ThemeStatus.NEW;\r\n                    });\r\n                    promises.push(prom);\r\n                }\r\n                else { // ah we already got it then just push it.\r\n                    AlreadyAddedTheme.status = ThemeStatus.UNMODIFIED;\r\n                    _service.AvailableThemes.push(AlreadyAddedTheme);\r\n                }\r\n            });\r\n            // $q.all(promises).then(function(lagen) {\r\n            //     console.log(lagen);\r\n            // });\r\n            return $q.all(promises);\r\n        };\r\n        _service.SetAditionalLayerInfo = function(theme) {\r\n            var prom = GISService.GetThemeLayerData(theme.CleanUrl);\r\n            prom.success(function(data, statuscode, functie, getdata) {\r\n                theme.AllLayers.forEach(layer => {\r\n                    var layerid = layer.id;\r\n                    var layerInfo = data.layers[layerid];\r\n                    layer.displayField = layerInfo.displayField;\r\n                    layer.fields = layerInfo.fields;\r\n                });\r\n            });\r\n        };\r\n        return _service;\r\n    };\r\n    module.$inject = ['MapData', '$http', '$q', 'GISService', 'ThemeHelper'];\r\n    module.factory('LayerManagementService', service);\r\n})();"]}