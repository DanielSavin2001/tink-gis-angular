@import "../../bower_components/tink-core/dist/tink/functions";
@import "../../bower_components/tink-core/dist/tink/mixins";
@import "../../bower_components/tink-core/dist/tink/variables";

$left-nav-aside-width: $nav-aside-width + $nav-aside-extra-body-padding + 100px; // making wider for extra detail content
$right-nav-aside-width: $nav-aside-width + $nav-aside-extra-body-padding + 50px; // making wider for extra detail content
$map-buttons-position-left-xs: 10px;
$map-buttons-position-left-sm: $map-buttons-position-left-xs + 5px;
$leaflet-control-position-left-xs: $map-buttons-position-left-xs + 90px;
$leaflet-control-position-left-sm: $map-buttons-position-left-sm + 90px;


/**
 * Map
 */

.tink-map, .leafletmap {
  height: 100%;
  width: 100%;
}

.tink-map {
  // !! not necessary anymore
  // @include mq($screen-sm) {
  //   padding-right: rem($nav-aside-width);
  //   padding-left: rem($nav-aside-width);
  // }

  .nav-aside {
    top: 0; // is overwritten in specificity by Tink navigation script when using solution
    z-index: 1000; // set above leafletmap and leaflet-control

    li {
      white-space: nowrap;
    }

    dl {
      margin-bottom: rem($font-size-base/2);
    }


  }

  .nav-aside.nav-left {
    width: rem($left-nav-aside-width);
  }

    .nav-aside.nav-right {
    width: rem($right-nav-aside-width);
  }

}

.leafletmap {
  position: relative;
}

.leaflet-popup-content-wrapper, .leaflet-popup-tip {
    opacity: 0.8;
}

.leaflet-popup-content-wrapper {
    border-radius: 6px;
}

svg.leaflet-zoom-animated {
    z-index: 999;
}
.leaflet-marker-pane {
    z-index: 999;
}
.leaflet-popup-pane {
    z-index: 1000;
}

.leaflet-overlay-pane {
    z-index: auto;
}
.leaflet-objects-pane {
    z-index: auto;
}
.leaflet-tile-pane {
    z-index: auto;
}

.leaflet-top {
  .leaflet-control {
    left: rem($leaflet-control-position-left-xs);
    margin: 0; //reset default leaflet margin so positioning can be done on typeahead

    @include mq($screen-sm) {
      left: rem($leaflet-control-position-left-sm);
    }
  }
}

.leaflet-popup-close-button {
  z-index: 9999; //Make sure the close button is clickable when there is a popup!
}

.leaflet-control-scale-line {
  margin-bottom: rem(7);
  margin-left: rem(140); // set next to kaarttypes
    @include mq($screen-sm) {
    margin-bottom: rem(12)
  }
}


/**
 * Map buttons styling
 */

.ll {
  position: absolute;
  z-index: 600;

  .fa {
      width: rem($font-size-base);
  }
}

button.btn.active {
  // background-color: dodgerblue;
  background-color: $brand-light;
  color: white;
}


/**
 * Map buttons left side
 */

.drawingbtns {
  left: rem(55);
  top: rem(134);

  .select {
    display: inline-block;
    position: relative;
    vertical-align: middle;
  }

  @include mq($screen-sm) {
    left: rem(60);
    top: rem(137);
  }
}

.interactiebtns {
  left: rem($map-buttons-position-left-xs); // this shouldn't be necessary if it's set in leaflet-control container
  top: rem(100);

  @include mq($screen-sm) {
    left: rem($map-buttons-position-left-sm); // this shouldn't be necessary if it's set in leaflet-control container
    top: rem(105);
  }
}

.kaarttypes {
  left: rem($map-buttons-position-left-xs);
  bottom: rem(10);

  @include mq($screen-sm) {
    left: rem($map-buttons-position-left-sm);
    bottom: rem(15);
  }

  > .btn {
    height: rem(30);
    font-size: rem(10);
  }
}

.metenbtns {
  left: rem(55);
  top: rem(165);

  @include mq($screen-sm) {
    left: rem(60);
    top: rem(170);
  }
}

.searchbtns {
  left: rem($map-buttons-position-left-xs);
  top: rem(10);

  @include mq($screen-sm) {
    left: rem($map-buttons-position-left-sm);
    top: rem(15);
  }
}

// .zoekbalk {// necessary when it width is dependant of the container?
//   width: rem(150);

//   @include mq($screen-sm) {
//     width: rem(300);
//   }
// }

.zoekbalken {
  // left: rem(90);
  left: rem($leaflet-control-position-left-xs);
  top: rem(10); // same values as searchbtns
  width: rem(500);

  input {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    width: rem(200);
  }


  select {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
    width: rem(240);
  }

  @include mq($screen-sm) {
    // left: rem(95);
    left: rem($leaflet-control-position-left-sm);
    top: rem(15); // same values as searchbtns
  }
}

.zoekbalken2 {
  left: rem(250);
  top: rem(10);

  @include mq($screen-sm) {
    left: rem(260);
    top: rem(15);
  }
}

.hide-element {
  display: none !important;
}

.blue {
  // color: blue;
  color: $brand-light;
}
.zoekbalken2  { //!! what's the use of this class?
  width: 200px;
}


/**
 * Map buttons right side
 */

// .localiseerbtn {
//   right: rem(10);
//   bottom: rem(20);

//   @include mq($screen-sm) {
//     right: rem(15);
//     bottom: rem(20);
//   }
// }

.viewbtns {
  right: rem(10);
  bottom: rem(10);

  @include mq($screen-sm) {
    right: rem(15);
    bottom: rem(15);
  }
}


/**
 * Loader
 */

.loading {
  right: rem(10);
  top: rem(10);
  background-color: white;
  @include mq($screen-sm) {
    right: rem(15);
    top: rem(15);
  }
}

.loader-advanced {
  height: rem(80);
  text-align: center;
  position: relative;
  width: rem(80);

  .loader {
    height: 5em;
    width: 5em;
    top: 0.3em;
  }

  .loader-percentage {
    position: relative;
    top: - rem(42);
  }

}


/**
 * Separate components
 */

//Add this class to .main to override default padding and transform
.full-width {
    padding-left: 0 !important;
    padding-right: 0 !important;
    transform: translate(0, 0) !important; // translate setting created a fixed bug with print-menu-footer
}

//Creating parent container for flex column and overflow-wrapper
.relative-container {
  // flex container settings
  display: flex;
}


.flex-column {

  // flex container settings
  display: flex;
  flex-direction: column;
}

.flex-grow-1 {
  flex-grow: 1;
}

.overflow-wrapper {
  overflow: auto;
  // width: 100%; // !!perhaps not necessary?

  &.list-selectable {
    user-select: none;

    dl {
      margin-bottom: rem(10);

      dd {
        color: $gray;
        cursor: default;
        margin-left: rem(10);
        transition: all $animation-speed linear;
      }

      dt {
        color: $gray-light;
        cursor: pointer;
        transition: all $animation-speed linear;
      }

      &.active {
        a {
          dt {
            color: $brand;
          }
        }

        dd {
          color: darken($gray, 25%);
        }
      }
    }
  }
}

.nav-aside > aside {

  &.flex-column {
    overflow: initial; // so the children can set overflow
  }
}

.border-right {
  border-right: solid 1px $gray-light;
}

/* List toggle */
// FYI .can-open class is also nested in Tink navigation, but doesn't conflict with following styling
.can-open {

  .show-layer {
    cursor: pointer;
    display: inline-block;
    padding: 0 rem(5) 0 rem(5);
    user-select: none;

    &:after {
      content: "\f0d7";
      font-family: FontAwesome;
      font-style: normal;
      font-weight: normal;
      // transition: color $animation-speed linear, transform $animation-speed linear; // doesn't work right now
    }
  }

  &.open {
    .show-layer {
      &:after {
        content: "\f0d8";
        // transform: rotate(180deg); // doesn't work right now
      }
    }
  }
}

/**
 * Rightside layer menu
 */

/* Trash can button */
button.trash {
  background-color: transparent;
  color: #bbb;
  font-family: FontAwesome;
  font-weight: 100;
  border-width: 0;
  padding: 0 rem(12);

  &:hover,
  &:focus {
    color: #333;
  }

  &:before {
    content: "\f014";
  }
}

button.trashcan {
  color: $gray-dark;

  &:hover,
  &:focus {
    color: #333;
  }
}


/* Table of content */

.toc-item-without-icon {
  display: inline-flex; //set as inline-level flex container
}

.toc-item-with-icon {
  display: inline-flex;
  position: relative;
  .layer-icon {
    height: rem(18);
    left: rem(-25);
    margin-right: rem(5);
    position: absolute;
    width: rem(18);
  }
}

// indentingwise more correct but visually not better
// .li-item {
//   position: relative;
//   .wms-legend {
//     left: rem(-25);
//     position: absolute;
//   }
// }

// extra styling when sorting li-items

.ui-sortable-helper {
  background-color: rgba(0, 0, 0, .03);
  border-radius: $border-radius-base;
  cursor: move;
}

.ui-sortable-placeholder {
  background: $gray-lightest;
  border: 1px dashed $brand-light;
  border-radius: $border-radius-base;
  visibility: visible !important;
}

/* Layer result */

.theme-layer { // is a actually an a href
  &:hover {
    text-decoration: none;
  }
}

// solrGISTemplate
.blacktext {
  color: black !important;
}

.featureinsolr {
  font-style: italic;
  font-size: 10px;
}

.layercontroller-checkbox
{
    margin-left:10px; // better to use list styling
}

img {
  &.normal-size {
    display: block;
    max-width: initial;
  }
}
// set a pointer on the clickable items
a,
input[type="checkbox"] {
  &:hover,
  &:focus {
    cursor: pointer;
  }
}

// give the elements in de sidenav some more padding on both sides
.extra-padding {
  padding-left: rem(14);
  padding-right: rem(14);
}

// make indentation with ul list
ul {
  ul {
    margin-left: rem(24);
  }
}

/**
 * Modal styling
 */

.modal {
  // seems to generate unnecessary scrollbar when using second overflow-wrapper - fixed with initial setting !!
  overflow: initial; //!! no good with smaller viewports??
  z-index: 9998;
}

.modal-content {
  display: flex;
  flex-direction: column;
  height: 100%; // container for flex-columns
}

.modal-dialog{
  background-color: $white;
  margin: 0; // the default Tink top- and bottommargin break it at small screen heights
  max-width: 95%; // keep it evenly wide
  text-align: left;
  z-index: 9999;
}

.modal-body {

  &.height-lg {
    height: 75vh;
  }

  &.width-lg {
    min-width: 90vw;
  }

  // &.width-md { // deprecated
  //   min-width: 60vw;

  //   @include mq($screen-sm) {
  //     min-width: 40vw;
  //   }
  // }

  &.width-sm {
    min-width: 40vw;

    @include mq($screen-sm) {
      min-width: 20vw;
    }
  }
}

.modal-footer {
  border-top: 1px solid $gray-light;

  &.border-none {
    border: none;
  }
}

.modal-header {
  border-bottom: 1px solid $gray-light;

  &.border-none {
    border: none;
  }
}

.close {
  font-family: FontAwesome;
  font-weight: normal;

  &:before {
    content: "\f00d";
  }
}

// customize pagination
.table-sort-options {
  .table-sort-info {
    display: none;
  }
  .table-sort-pagination {
    float: left !important;
    margin: 0;
    padding: 0;
    .prev,
    .next {
      span {
        display: none;
      }
    }
  }
}

/**
 * Typeahead styling
 */

.twitter-typeahead {
  /* position */
  left: 0;
  top: rem(10); // same values as searchbtns
  width: rem(280);

  @include mq($screen-sm) {
    top: rem(15);
  }
}

input.typeahead.tt-input {
  background-color: #fff;
}

.tt-suggestion + .tt-suggestion {
  border-top: 1px solid $gray-lighter;
}
    .tt-focus {
        border: 2px solid #0097cf;
    }

    .tt-query {
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
    }

    input[type="text"].tt-hint {
        color: $gray-light;
    }

    .tt-menu {
      background-color: $white;
      border: 1px solid $gray-light;
      border-radius: $border-radius-base;
      box-shadow: 0 0 2px rgba(0,0,0,.6);
      margin-top: 2px;
      max-height: 85vh;
      overflow-y: auto;
      padding: $padding-base-vertical 0;
      width: rem(280);
      z-index: 99999;
    }

    .tt-suggestion {
      font-size: rem($font-size-base);
      line-height: $line-height-base;
      padding: $padding-small-vertical $padding-small-horizontal;
      z-index: 99999;

      p {
        color: $gray;
        font-size: rem(8px);

        strong {
          font-weight: normal;
        }
      }
    }

    .tt-suggestion:hover {
      background-color: $brand-light;
      color: $white;
      cursor: pointer;

      p {
        color: $gray-lightest;
      }
    }

    .tt-suggestion.tt-cursor {
      background-color: $brand-light;
      color: $white;
    }

    .tt-suggestion p {
      margin: 0;
    }


/**
 * Legacy code - needs further checking
 */

.gist {
    font-size: 14px;
}

.empty-message {padding:5px;text-align:center;color:red}

.achtergrondfixvoorpng {
  background-image: url('fa-dot-circle-o_24_0_000000_none.png');
}

.row-no-padding {
  [class*="col-"] {
    padding-left: 0 !important;
    padding-right: 0 !important;
  }
}
.container.container-low-padding {
    padding-left: 0.46875rem;
    padding-right: 0.46875rem;
}
.makeblock{
    display: block !important;
}


.greytext {
  color: lightgrey !important;
}

.not-allowed {
  cursor: not-allowed;
}

// This breaks pagination
// a.btn.prev,a.btn.next {
//   display: none;
// }
// div.table-sort-pagination {
//       float: left !important;
// }
.nav-tabs {
  margin:  5px 0px 5px 0px;
}


/**
 * Refactor work in progress !!
 */

.aside {
  position: relative;
}

.nav-left-toggle,
.nav-right-toggle {
  background-color: #fff;
  border-color: rgba(0, 0, 0, 0.12);
  border-style: solid;
  border-width: 2px;
  position: fixed;
  text-align: center;
  top: 4rem;
  z-index: 700;

  &:hover,
  &:focus,
  &:active {
    box-shadow: 0 0 0 0;
    outline: 0;
  }

  a{
    color: #333;

    &:hover,
    &:focus,
    &:active {
      box-shadow: 0 0 0 0;
      outline: 0;
    }
  }
}

.nav-left-toggle,
.nav-right-toggle {
  font-family: FontAwesome;
  font-weight: 100;
}


.nav-left-toggle {
  border-left-color: #fff;
  right: rem(-33);

  &:before {
    content: "\f101";
  }
}

.nav-right-toggle {
  border-right-color: #fff;
  left: rem(-33);

  &:before {
    content: "\f100";
  }
}

// adjusting the left sidenav width when collapsed
html.has-nav-left .nav-left {
  transform: translate(rem(-$left-nav-aside-width) , 0);
}

// not using .nav-right-can-always-close classes because they create unwanted menu item on top nav
.nav-right {
  // transform: translate(15.7142857143rem , 0); !!
  transform: translate(rem($right-nav-aside-width) , 0);
}

.map-buttons-left {
  height: 100%;
  display: inline-block;
  margin-right: -4px; // clear spacing between  divs
  position: relative;
  width: 50%;
}

.map-buttons-right {
  height: 100%;
  display: inline-block;
  position: relative;
  width: 50%;
}

// Set padding for map buttons and change toggle icons
html.nav-left-open {
  .map-buttons-left {
    left: rem($left-nav-aside-width);
  }
  .nav-left {
    transform: translate(0, 0);
  }
  .nav-left-toggle {
    &:before {
      content: "\f100";
    }
  }
  .leaflet-control {
    left: rem($left-nav-aside-width + $leaflet-control-position-left-xs);
    &-scale-line {
      margin-left: rem(45);
    }

    @include mq($screen-sm) {
      left: rem($left-nav-aside-width + $leaflet-control-position-left-sm);
    }
  }
}

// Set padding for map buttons and change toggle icons
html.nav-right-open {
  .map-buttons-right {
    // right: rem($nav-aside-width + $nav-aside-extra-body-padding); !!
    right: rem($right-nav-aside-width);
  }
  .nav-right {
    transform: translate(0, 0);
  }
  .nav-right-toggle {
    &:before {
      content: "\f101";
    }
  }
}

/**
 * Print settings
 */

// @page Portrait {
//     size: A4 portrait;
// }
// @page Landscape {
//     size: A4 landscape;
// }

// default values

.print-menu,
.print-content-header,
.print-content-footer {
  display: none;
}

.print {
  &-content,
  &-map {
    height:100%;
    width:100%;
  }
}

// when print menu is active

html.print {

  .map-buttons-left,
  .map-buttons-right,
  .tink-layers,
  .tink-search,
  .typeahead,
  .layer-management {
    display: none;
  }

  &.preview-legend {
    .print {

      &-content-footer {
        display: none;
      }
    }

    .leafletmap {
      display: none;
    }

    .nav-aside:before {
      background: none;
    }

    .nav-right {
      position: relative; // sets the legend relative to the print-content-header
    }

    .print-content, // trying to make a long legend spread over multiple pages
    .print-map {
      height: 100%;
    }

    .tink-layers {
      display: block;

      .btn-layermanagement,
      .nav-aside-section,
      .nav-right-toggle {
        display: none;
      }
    }
  }

  .print {

    &-content {
      // box-shadow: 3px 3px 5px $gray-light;
      height: 255mm; // 275mm works on default margins of Chrome but not on Safari
      margin: 0 auto;
      width: 185mm; // works best on all browsers

      &-header {
        display: block;
        height: 15mm;
      }

      &-footer {
        display: block;
        font-size: 15px;
        height: 25mm;
        margin-top: 3mm;

        [class*='col-'] {
          padding-left: 0;
          padding-right: 0;
        }
      }
    }

    &-map {
        height: 212mm;
    }

    .leaflet-control-scale-line {
      margin-left: rem(9);
    }
  }

  .print-menu {
    display: block;

    &-header {
      background-color: $white;
      box-shadow: 0 1px 5px rgba(0, 0, 0, 0.06);
      padding: $padding-base-vertical $padding-base-horizontal;
      position: fixed;
      top:0;
      width: 100%;
      z-index: 1000; // set it above map
    }

    &-footer {
      background-color: $white;
      bottom: 0;
      box-shadow: 0 -1px 5px rgba(0, 0, 0, 0.06);
      padding: $padding-base-vertical $padding-base-horizontal;
      position: fixed;
      width: 100%;
      z-index: 1000; // set it above map
    }
  }

  .margin-print-content {
    height: rem(120);

    @include mq($screen-sm) {
      height: rem(100);
    }
  }
}

// when print menu is active and landscape is set

html.print.landscape {

  .print {

    &-content {
      // box-shadow: 3px 3px 5px $gray-light;
      height: 175mm;
      margin: 0 auto;
      width: 255mm;

    }

    &-map {
        height: 130mm;
    }
  }
}



@media print  {
   // body {
   //      margin-left: auto;
   //      margin-right: auto;
   //  }
  .hidden-print {
    display: none !important;
  }
  .print-content {
   // box-shadow: none;
  }
}

.print-corner-image {
  display: inline-block;
  height: 25mm;
  width: 25mm;
}


.mouse-over-toshow {
  display:none;
}

.mouse-over:hover {
  .mouse-over-toshow {
    display: inline-block;
    cursor: pointer;
  }
}



// @media print {
//   .print-content {
//     page-break-inside: avoid;
//   }
// }



/**
 * Full page loader
 */

.loader-wrapper {
  display:none;
}
html.show-loader {
.loader-wrapper {
    display:block;
    background-color: $modal-backdropcolor;
    bottom: 0%;
    left: 0;
    opacity: 1;
    position: fixed;
    right: 0%;
    top: 0;
    transition: opacity $animation-speed linear;
    z-index: 9999;
    .loader {
      display: inline-block;
      border-width: rem(5);
      height: rem(100);
      left: 50%;
      margin: rem(-50) 0 0 rem(-50);
      position: fixed;
      top: 50%;
      width: rem(100);
    }
  }
}

/**
 * Open project
 */

.project {
  margin-bottom: rem(6);

  &-creator {
    color: $gray;
  }
}

/**
 * Dashboard
 */

.dashboard {
  li {
      padding-bottom: rem($padding-small-vertical);
    }

  .show-more {
    font-weight: 700;
  }

  .column-right {
    width: rem(500);
}
}

.column-left {
  border-right: 1px solid $gray-light;
  width: rem(300);
}

.column-right {
  width: rem(600);
}

.block {
  &-attention {
    background-color: $gray-lightest;
    border-radius: $border-radius-base;
    bottom: 0;
    padding: rem(15);
    position: relative;
    width: 100%;

    h4 {
      margin-top: 0;
    }
  }
}

.title-block { // deprecated
  background-color: $gray-lightest;
  border-radius: $border-radius-base;
  height: rem(120);
  padding: rem(25) rem(15);
  text-align: center;
  .fa {
    font-size: rem(30);
  }
}

.index {
  li {
    padding-top: rem(5);
  }
}

.title {
  font-weight: 600;
}

.news-items {
  a {
    display: inline-block;
    padding-left: rem(12);
  }

  h6 {
  //  color: $gray;
    margin-bottom: 0;
  }

  li {
    padding: 0;
  }
}

/**
 * Global styling
 */

.icon {
  display: inline-block;
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  vertical-align: -.25ex;
}

button.disabled {
  background-color: $gray-light;
}

.link-cancel,
.button-padding {
  padding: rem($padding-base-vertical) rem($padding-base-horizontal);
}

.cursor-auto {
  cursor: auto;
}

.text-align-right {
  text-align: right;
}

// set nav-top links white
.nav-top {

  a {
    color: $white;
  }

  &-right > li {
    padding-left: rem(12);
    padding-right: rem(12);
  }
}

.tooltip {
  white-space: nowrap;
}

// fix for sweet-alert bug
  .sweet-alert {
    fieldset {
      display: none;
    }
  }

  body.stop-scrolling {
    height: 100vh;
  }
//


