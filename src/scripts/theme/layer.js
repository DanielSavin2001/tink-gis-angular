'use strict';
class LayerRAW {
    constructor(layerJSON) {
        Object.assign(this, layerJSON);
    }
}
exports.LayerRAW = LayerRAW;
class Layer extends LayerRAW {
    constructor(info, parenttheme) {
        super(info);
        this.UpdateDisplayed = (currentScale) => {
            if (this.maxScale > 0 || this.minScale > 0) {
                console.log('MinMaxandCurrentScale', this.maxScale, this.minScale, currentScale);
                if (currentScale > this.maxScale && currentScale < this.minScale) {
                    this.displayed = true;
                }
                else {
                    this.displayed = false;
                }
            }
        };
        this.visible = info.defaultVisibility;
        this.enabled = true;
        this.parent = null;
        this.title = info.name;
        this.theme = parenttheme;
        this.displayed = true;
        if (this.parentLayerId === -1 && this.subLayerIds !== null) {
            this.type = LayerType.GROUP;
        }
        else {
            this.type = LayerType.LAYER;
        }
    }
}
exports.Layer = Layer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsYXllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFHYjtJQVFJLFlBQVksU0FBYztRQUN0QixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxTQUFTLENBQUMsQ0FBQztJQUNuQyxDQUFDO0FBQ0wsQ0FBQztBQVhZLGdCQUFRLFdBV3BCLENBQUE7QUFHRCxvQkFBMkIsUUFBUTtJQVUvQixZQUFZLElBQWMsRUFBRSxXQUFrQjtRQUMxQyxNQUFNLElBQUksQ0FBQyxDQUFDO1FBZWhCLG9CQUFlLEdBQUcsQ0FBQyxZQUFZO1lBQzNCLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxJQUFJLElBQUksQ0FBQyxRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDekMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx1QkFBdUIsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsWUFBWSxDQUFDLENBQUM7Z0JBQ2pGLEVBQUUsQ0FBQyxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxJQUFJLFlBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztvQkFDL0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7Z0JBQzFCLENBQUM7Z0JBQ0QsSUFBSSxDQUFDLENBQUM7b0JBQ0YsSUFBSSxDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUM7Z0JBQzNCLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQyxDQUFDO1FBdkJFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1FBQ3RDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQztRQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztRQUN0QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxLQUFLLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztZQUN6RCxJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUM7UUFDaEMsQ0FBQztRQUNELElBQUksQ0FBQyxDQUFDO1lBQ0YsSUFBSSxDQUFDLElBQUksR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDO1FBQ2hDLENBQUM7SUFDTCxDQUFDO0FBWUwsQ0FBQztBQXJDWSxhQUFLLFFBcUNqQixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5pbXBvcnQge1RoZW1lfSBmcm9tICcuL3RoZW1lJztcclxuXHJcbmV4cG9ydCBjbGFzcyBMYXllclJBVyB7XHJcbiAgICBpZDogbnVtYmVyO1xyXG4gICAgbmFtZTogc3RyaW5nO1xyXG4gICAgcGFyZW50TGF5ZXJJZDogbnVtYmVyO1xyXG4gICAgZGVmYXVsdFZpc2liaWxpdHk6IGJvb2xlYW47XHJcbiAgICBzdWJMYXllcklkczogbnVtYmVyW107XHJcbiAgICBtaW5TY2FsZTogbnVtYmVyO1xyXG4gICAgbWF4U2NhbGU6IG51bWJlcjtcclxuICAgIGNvbnN0cnVjdG9yKGxheWVySlNPTjogYW55KSB7XHJcbiAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBsYXllckpTT04pO1xyXG4gICAgfVxyXG59XHJcblxyXG5cclxuZXhwb3J0IGNsYXNzIExheWVyIGV4dGVuZHMgTGF5ZXJSQVcge1xyXG4gICAgdmlzaWJsZTogYm9vbGVhbjtcclxuICAgIGVuYWJsZWQ6IGJvb2xlYW47XHJcbiAgICBwYXJlbnQ6IGFueTtcclxuICAgIHRoZW1lOiBUaGVtZTtcclxuICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICBkaXNwbGF5ZWQ6IGJvb2xlYW47XHJcbiAgICB0eXBlOiBudW1iZXI7XHJcbiAgICBMYXllcnM6IEFycmF5PExheWVyPjtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihpbmZvOiBMYXllclJBVywgcGFyZW50dGhlbWU6IFRoZW1lKSB7XHJcbiAgICAgICAgc3VwZXIoaW5mbyk7XHJcbiAgICAgICAgLy9vc2RmXHJcbiAgICAgICAgdGhpcy52aXNpYmxlID0gaW5mby5kZWZhdWx0VmlzaWJpbGl0eTtcclxuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucGFyZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLnRpdGxlID0gaW5mby5uYW1lO1xyXG4gICAgICAgIHRoaXMudGhlbWUgPSBwYXJlbnR0aGVtZTtcclxuICAgICAgICB0aGlzLmRpc3BsYXllZCA9IHRydWU7XHJcbiAgICAgICAgaWYgKHRoaXMucGFyZW50TGF5ZXJJZCA9PT0gLTEgJiYgdGhpcy5zdWJMYXllcklkcyAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLnR5cGUgPSBMYXllclR5cGUuR1JPVVA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnR5cGUgPSBMYXllclR5cGUuTEFZRVI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgVXBkYXRlRGlzcGxheWVkID0gKGN1cnJlbnRTY2FsZSkgPT4ge1xyXG4gICAgICAgIGlmICh0aGlzLm1heFNjYWxlID4gMCB8fCB0aGlzLm1pblNjYWxlID4gMCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnTWluTWF4YW5kQ3VycmVudFNjYWxlJywgdGhpcy5tYXhTY2FsZSwgdGhpcy5taW5TY2FsZSwgY3VycmVudFNjYWxlKTtcclxuICAgICAgICAgICAgaWYgKGN1cnJlbnRTY2FsZSA+IHRoaXMubWF4U2NhbGUgJiYgY3VycmVudFNjYWxlIDwgdGhpcy5taW5TY2FsZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwbGF5ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwbGF5ZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn1cclxuIl19