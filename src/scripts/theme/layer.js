'use strict';
var app;
(function (app) {
    class LayerJSON {
        constructor(layerJSON) {
            Object.assign(this, layerJSON);
        }
    }
    app.LayerJSON = LayerJSON;
    class Layer extends LayerJSON {
        constructor(info, parenttheme) {
            super(info);
            this.UpdateDisplayed = (currentScale) => {
                if (this.maxScale > 0 || this.minScale > 0) {
                    console.log('MinMaxandCurrentScale', this.maxScale, this.minScale, currentScale);
                    if (currentScale > this.maxScale && currentScale < this.minScale) {
                        this.displayed = true;
                    }
                    else {
                        this.displayed = false;
                    }
                }
            };
            this.visible = info.defaultVisibility;
            this.enabled = true;
            this.parent = null;
            this.title = info.name;
            this.theme = parenttheme;
            this.displayed = true;
            if (this.parentLayerId === -1 && this.subLayerIds !== null) {
                this.type = LayerType.GROUP;
            }
            else {
                this.type = LayerType.LAYER;
            }
        }
    }
    app.Layer = Layer;
})(app || (app = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJsYXllci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFFYixJQUFVLEdBQUcsQ0FzRFo7QUF0REQsV0FBVSxHQUFHLEVBQUMsQ0FBQztJQUVYO1FBUUksWUFBWSxTQUFjO1lBQ3RCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO1FBQ25DLENBQUM7SUFDTCxDQUFDO0lBWFksYUFBUyxZQVdyQixDQUFBO0lBR0Qsb0JBQTJCLFNBQVM7UUFVaEMsWUFBWSxJQUFlLEVBQUUsV0FBa0I7WUFDM0MsTUFBTSxJQUFJLENBQUMsQ0FBQztZQWVoQixvQkFBZSxHQUFHLENBQUMsWUFBWTtnQkFDM0IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUN6QyxPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsRUFBRSxZQUFZLENBQUMsQ0FBQztvQkFDakYsRUFBRSxDQUFDLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLElBQUksWUFBWSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO3dCQUMvRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztvQkFDMUIsQ0FBQztvQkFDRCxJQUFJLENBQUMsQ0FBQzt3QkFDRixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztvQkFDM0IsQ0FBQztnQkFDTCxDQUFDO1lBQ0wsQ0FBQyxDQUFDO1lBdkJFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDO1lBQ3RDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1lBQ25CLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztZQUN2QixJQUFJLENBQUMsS0FBSyxHQUFHLFdBQVcsQ0FBQztZQUN6QixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztZQUN0QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsYUFBYSxLQUFLLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxXQUFXLEtBQUssSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDekQsSUFBSSxDQUFDLElBQUksR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDO1lBQ2hDLENBQUM7WUFDRCxJQUFJLENBQUMsQ0FBQztnQkFDRixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUM7WUFDaEMsQ0FBQztRQUNMLENBQUM7SUFZTCxDQUFDO0lBckNZLFNBQUssUUFxQ2pCLENBQUE7QUFDTCxDQUFDLEVBdERTLEdBQUcsS0FBSCxHQUFHLFFBc0RaIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG4vLyBpbXBvcnQge1RoZW1lfSBmcm9tICcuL3RoZW1lJztcclxubmFtZXNwYWNlIGFwcCB7XHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIExheWVySlNPTiB7XHJcbiAgICAgICAgaWQ6IG51bWJlcjtcclxuICAgICAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICAgICAgcGFyZW50TGF5ZXJJZDogbnVtYmVyO1xyXG4gICAgICAgIGRlZmF1bHRWaXNpYmlsaXR5OiBib29sZWFuO1xyXG4gICAgICAgIHN1YkxheWVySWRzOiBudW1iZXJbXTtcclxuICAgICAgICBtaW5TY2FsZTogbnVtYmVyO1xyXG4gICAgICAgIG1heFNjYWxlOiBudW1iZXI7XHJcbiAgICAgICAgY29uc3RydWN0b3IobGF5ZXJKU09OOiBhbnkpIHtcclxuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbih0aGlzLCBsYXllckpTT04pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgZXhwb3J0IGNsYXNzIExheWVyIGV4dGVuZHMgTGF5ZXJKU09OIHtcclxuICAgICAgICB2aXNpYmxlOiBib29sZWFuO1xyXG4gICAgICAgIGVuYWJsZWQ6IGJvb2xlYW47XHJcbiAgICAgICAgcGFyZW50OiBhbnk7XHJcbiAgICAgICAgdGhlbWU6IFRoZW1lO1xyXG4gICAgICAgIHRpdGxlOiBzdHJpbmc7XHJcbiAgICAgICAgZGlzcGxheWVkOiBib29sZWFuO1xyXG4gICAgICAgIHR5cGU6IG51bWJlcjtcclxuICAgICAgICBMYXllcnM6IEFycmF5PExheWVyPjtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3IoaW5mbzogTGF5ZXJKU09OLCBwYXJlbnR0aGVtZTogVGhlbWUpIHtcclxuICAgICAgICAgICAgc3VwZXIoaW5mbyk7XHJcbiAgICAgICAgICAgIC8vb3NkZlxyXG4gICAgICAgICAgICB0aGlzLnZpc2libGUgPSBpbmZvLmRlZmF1bHRWaXNpYmlsaXR5O1xyXG4gICAgICAgICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLnBhcmVudCA9IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMudGl0bGUgPSBpbmZvLm5hbWU7XHJcbiAgICAgICAgICAgIHRoaXMudGhlbWUgPSBwYXJlbnR0aGVtZTtcclxuICAgICAgICAgICAgdGhpcy5kaXNwbGF5ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5wYXJlbnRMYXllcklkID09PSAtMSAmJiB0aGlzLnN1YkxheWVySWRzICE9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnR5cGUgPSBMYXllclR5cGUuR1JPVVA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnR5cGUgPSBMYXllclR5cGUuTEFZRVI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgVXBkYXRlRGlzcGxheWVkID0gKGN1cnJlbnRTY2FsZSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5tYXhTY2FsZSA+IDAgfHwgdGhpcy5taW5TY2FsZSA+IDApIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdNaW5NYXhhbmRDdXJyZW50U2NhbGUnLCB0aGlzLm1heFNjYWxlLCB0aGlzLm1pblNjYWxlLCBjdXJyZW50U2NhbGUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTY2FsZSA+IHRoaXMubWF4U2NhbGUgJiYgY3VycmVudFNjYWxlIDwgdGhpcy5taW5TY2FsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcGxheWVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZGlzcGxheWVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgfVxyXG59XHJcbiJdfQ==