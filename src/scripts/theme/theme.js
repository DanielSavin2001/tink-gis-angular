'use strict';
var app;
(function (app) {
    class Theme {
        constructor() {
            this.UpdateDisplayed = (currentScale) => {
                this.AllLayers.forEach(layer => {
                    layer.UpdateDisplayed(currentScale);
                });
            };
            this.UpdateMap = () => {
                this.RecalculateVisibleLayerIds();
                this.MapData.setLayers(this.VisibleLayerIds);
            };
            this.RecalculateVisibleLayerIds = () => {
                this.VisibleLayerIds.length = 0;
                this.VisibleLayers.forEach(visLayer => {
                    this.VisibleLayerIds.push(visLayer.id);
                });
                if (this.VisibleLayerIds.length === 0) {
                    this.VisibleLayerIds.push(-1);
                }
            };
        }
    }
    app.Theme = Theme;
})(app || (app = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0aGVtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxZQUFZLENBQUM7QUFDYixJQUFVLEdBQUcsQ0EwQ1o7QUExQ0QsV0FBVSxHQUFHLEVBQUMsQ0FBQztJQUNYO1FBQUE7WUFzQkksb0JBQWUsR0FBRyxDQUFDLFlBQVk7Z0JBQzNCLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEtBQUs7b0JBQ3hCLEtBQUssQ0FBQyxlQUFlLENBQUMsWUFBWSxDQUFDLENBQUM7Z0JBQ3hDLENBQUMsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFBO1lBQ0QsY0FBUyxHQUFHO2dCQUNSLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO2dCQUNsQyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDakQsQ0FBQyxDQUFDO1lBQ0YsK0JBQTBCLEdBQUc7Z0JBQ3pCLElBQUksQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsUUFBUTtvQkFDL0IsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUMzQyxDQUFDLENBQUMsQ0FBQztnQkFDSCxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO29CQUNwQyxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNsQyxDQUFDO1lBQ0wsQ0FBQyxDQUFDO1FBQ04sQ0FBQztJQUFELENBQUM7SUF4Q3FCLFNBQUssUUF3QzFCLENBQUE7QUFDTCxDQUFDLEVBMUNTLEdBQUcsS0FBSCxHQUFHLFFBMENaIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHtMYXllcn0gZnJvbSAnLi9sYXllcic7XHJcbid1c2Ugc3RyaWN0JztcclxubmFtZXNwYWNlIGFwcCB7XHJcbiAgICBleHBvcnQgYWJzdHJhY3QgY2xhc3MgVGhlbWUge1xyXG4gICAgICAgIE5hYW06IHN0cmluZztcclxuICAgICAgICBuYW1lOiBzdHJpbmc7XHJcbiAgICAgICAgRGVzY3JpcHRpb246IHN0cmluZztcclxuICAgICAgICBDbGVhblVybDogc3RyaW5nO1xyXG4gICAgICAgIFVybDogc3RyaW5nO1xyXG5cclxuICAgICAgICBWaXNpYmxlOiBib29sZWFuO1xyXG4gICAgICAgIEFkZGVkOiBib29sZWFuO1xyXG4gICAgICAgIGVuYWJsZWQ6IGJvb2xlYW47XHJcblxyXG4gICAgICAgIFR5cGU6IHN0cmluZztcclxuICAgICAgICBzdGF0dXM6IG51bWJlcjtcclxuXHJcbiAgICAgICAgVmlzaWJsZUxheWVySWRzOiBBcnJheTxudW1iZXI+O1xyXG4gICAgICAgIExheWVyczogQXJyYXk8TGF5ZXI+O1xyXG4gICAgICAgIFZpc2libGVMYXllcnM6IEFycmF5PExheWVyPjtcclxuICAgICAgICBBbGxMYXllcnM6IEFycmF5PExheWVyPjtcclxuICAgICAgICBHcm91cHM6IEFycmF5PExheWVyPjtcclxuXHJcbiAgICAgICAgTWFwRGF0YTogYW55O1xyXG5cclxuICAgICAgICBVcGRhdGVEaXNwbGF5ZWQgPSAoY3VycmVudFNjYWxlKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuQWxsTGF5ZXJzLmZvckVhY2gobGF5ZXIgPT4ge1xyXG4gICAgICAgICAgICAgICAgbGF5ZXIuVXBkYXRlRGlzcGxheWVkKGN1cnJlbnRTY2FsZSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBVcGRhdGVNYXAgPSAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuUmVjYWxjdWxhdGVWaXNpYmxlTGF5ZXJJZHMoKTtcclxuICAgICAgICAgICAgdGhpcy5NYXBEYXRhLnNldExheWVycyh0aGlzLlZpc2libGVMYXllcklkcyk7XHJcbiAgICAgICAgfTtcclxuICAgICAgICBSZWNhbGN1bGF0ZVZpc2libGVMYXllcklkcyA9ICgpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5WaXNpYmxlTGF5ZXJJZHMubGVuZ3RoID0gMDtcclxuICAgICAgICAgICAgdGhpcy5WaXNpYmxlTGF5ZXJzLmZvckVhY2godmlzTGF5ZXIgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5WaXNpYmxlTGF5ZXJJZHMucHVzaCh2aXNMYXllci5pZCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5WaXNpYmxlTGF5ZXJJZHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlZpc2libGVMYXllcklkcy5wdXNoKC0xKTsgLy9hbHMgd2UgbmlldCBkb2VuIGRhbiB6b2VrdCBoaWogb3AgYWxsZSBsYWdlbiFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn0iXX0=