'use strict';
(function () {
    var module = angular.module('tink.gis');
    var service = function () {
        class ThemeCreater {
            constructor() {
                this.createARCGISThemeFromJson = function (rawdata, themeData) {
                    let theme = new app.ArcGIStheme(rawdata, themeData);
                    return theme;
                };
                this.createWMSThemeFromJSON = function (data, url) {
                    var wms = new app.wmstheme(data, url);
                    return wms;
                };
            }
        }
        ;
        return new ThemeCreater();
    };
    module.factory('ThemeCreater', service);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGhlbWVDcmVhdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsidGhlbWVDcmVhdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLFlBQVksQ0FBQztBQUNiLENBQUM7SUFDRyxJQUFJLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3hDLElBQUksT0FBTyxHQUFHO1FBQ1Y7WUFBQTtnQkFDSSw4QkFBeUIsR0FBRyxVQUFVLE9BQU8sRUFBRSxTQUFTO29CQUNwRCxJQUFJLEtBQUssR0FBb0IsSUFBSSxHQUFHLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQTtvQkFDcEUsTUFBTSxDQUFDLEtBQUssQ0FBQztnQkFDakIsQ0FBQyxDQUFDO2dCQUNGLDJCQUFzQixHQUFHLFVBQVUsSUFBSSxFQUFFLEdBQUc7b0JBQ3hDLElBQUksR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7b0JBQ3RDLE1BQU0sQ0FBQyxHQUFHLENBQUM7Z0JBQ2YsQ0FBQyxDQUFDO1lBQ04sQ0FBQztRQUFELENBQUM7UUFBQSxDQUFDO1FBRUYsTUFBTSxDQUFDLElBQUksWUFBWSxFQUFFLENBQUM7SUFDOUIsQ0FBQyxDQUFDO0lBQ0YsTUFBTSxDQUFDLE9BQU8sQ0FBQyxjQUFjLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDNUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCAqIGFzIGFuZ3VsYXIgZnJvbSAnYW5ndWxhcic7XHJcbi8vIGltcG9ydCB7QXJjR0lTdGhlbWV9IGZyb20gJy4vYXJjR0lTdGhlbWUnO1xyXG4vLyBpbnRlcmZhY2UgVGhlbWVDcmVhdGVyIHtcclxuLy8gICAgIGNyZWF0ZUFSQ0dJU1RoZW1lRnJvbUpzb24oZGF0YTogYW55LCB1cmw6IHN0cmluZyk6IGFueTtcclxuLy8gICAgIGNyZWF0ZVdNU1RoZW1lRnJvbUpTT04oZGF0YTogYW55LCB1cmw6IHN0cmluZyk6IGFueTtcclxuLy8gfVxyXG4ndXNlIHN0cmljdCc7XHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3RpbmsuZ2lzJyk7XHJcbiAgICB2YXIgc2VydmljZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBjbGFzcyBUaGVtZUNyZWF0ZXIge1xyXG4gICAgICAgICAgICBjcmVhdGVBUkNHSVNUaGVtZUZyb21Kc29uID0gZnVuY3Rpb24gKHJhd2RhdGEsIHRoZW1lRGF0YSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHRoZW1lOiBhcHAuQXJjR0lTdGhlbWUgPSBuZXcgYXBwLkFyY0dJU3RoZW1lKHJhd2RhdGEsIHRoZW1lRGF0YSlcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGVtZTtcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgY3JlYXRlV01TVGhlbWVGcm9tSlNPTiA9IGZ1bmN0aW9uIChkYXRhLCB1cmwpIHtcclxuICAgICAgICAgICAgICAgIHZhciB3bXMgPSBuZXcgYXBwLndtc3RoZW1lKGRhdGEsIHVybCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gd21zO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHJldHVybiBuZXcgVGhlbWVDcmVhdGVyKCk7XHJcbiAgICB9O1xyXG4gICAgbW9kdWxlLmZhY3RvcnkoJ1RoZW1lQ3JlYXRlcicsIHNlcnZpY2UpO1xyXG59KSgpO1xyXG4vLyAoZnVuY3Rpb24gKCkge1xyXG4vLyAgICAgdmFyIG1vZHVsZSA9IGFuZ3VsYXIubW9kdWxlKCd0aW5rLmdpcycpO1xyXG4vLyAgICAgdmFyIHNlcnZpY2UgPSBmdW5jdGlvbiAoJGh0dHAsICR3aW5kb3csIG1hcCwgaGVscGVyU2VydmljZSkge1xyXG4vLyAgICAgICAgIHZhciBfc2VydmljZTogYW55ID0ge307XHJcblxyXG4vLyAgICAgICAgIF9zZXJ2aWNlLkdldENhcGFiaWxpdGllcyA9IGZ1bmN0aW9uICh1cmwpIHtcclxuLy8gICAgICAgICAgICAgdmFyIGZ1bGx1cmwgPSB1cmwgKyAnP3JlcXVlc3Q9R2V0Q2FwYWJpbGl0aWVzJnNlcnZpY2U9V01TJmNhbGxiYWNrPWZvbyc7XHJcbi8vICAgICAgICAgICAgIHZhciBwcm9tID0gJGh0dHAoe1xyXG4vLyAgICAgICAgICAgICAgICAgbWV0aG9kOiAnR0VUJyxcclxuLy8gICAgICAgICAgICAgICAgIHVybDogaGVscGVyU2VydmljZS5DcmVhdGVQcm94eVVybChmdWxsdXJsKSxcclxuLy8gICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDEwMDAwLFxyXG4vLyAgICAgICAgICAgICAgICAgdHJhbnNmb3JtUmVzcG9uc2U6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEpIHtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGhlbHBlclNlcnZpY2UuVW53cmFwUHJveGllZERhdGEoZGF0YSk7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLmxpc3RPZkh0dHBFcnJvcikge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZGF0YS5saXN0T2ZIdHRwRXJyb3IsIGZ1bGx1cmwpO1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4vLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbnZlcnRlZFRvSnNvbiA9IEpYT04uc3RyaW5nVG9KcyhkYXRhKS53bXNfY2FwYWJpbGl0aWVzO1xyXG5cclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB3bXMgPSBuZXcgYXBwLndtc3RoZW1lKGNvbnZlcnRlZFRvSnNvbiwgdXJsKTtcclxuLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB3bXM7XHJcbi8vICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuLy8gICAgICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgICAgIH0pLnN1Y2Nlc3MoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XHJcbi8vICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmRpcihkYXRhKTsgIC8vIFhNTCBkb2N1bWVudCBvYmplY3RcclxuLy8gICAgICAgICAgICAgfSkuZXJyb3IoZnVuY3Rpb24gKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XHJcbi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3I6IGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnOicsIGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKTtcclxuLy8gICAgICAgICAgICAgfSk7XHJcbi8vICAgICAgICAgICAgIHJldHVybiBwcm9tO1xyXG4vLyAgICAgICAgIH07XHJcblxyXG4vLyAgICAgICAgIHJldHVybiBfc2VydmljZTtcclxuLy8gICAgIH07XHJcbi8vICAgICAvLyBtb2R1bGUuJGluamVjdCA9IFsnSGVscGVyU2VydmljZSddO1xyXG5cclxuLy8gICAgIG1vZHVsZS5zZXJ2aWNlKCdXTVNTZXJ2aWNlJywgWyckaHR0cCcsICckd2luZG93JywgJ21hcCcsICdIZWxwZXJTZXJ2aWNlJywgc2VydmljZV0pO1xyXG4vLyB9KSgpO1xyXG4iXX0=