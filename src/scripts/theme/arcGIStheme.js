"use strict";
const theme_1 = require('./theme');
const layer_1 = require('./layer');
'use strict';
class ArcGIStheme extends theme_1.Theme {
    constructor(rawdata, themeData) {
        super();
        let rawlayers = rawdata.layers;
        this.Naam = rawdata.documentInfo.Title;
        this.name = rawdata.documentInfo.Title;
        this.Description = rawdata.documentInfo.Subject;
        this.Layers = [];
        this.AllLayers = [];
        this.Groups = [];
        this.CleanUrl = themeData.cleanUrl;
        this.Url = themeData.url;
        this.VisibleLayers = [];
        this.VisibleLayerIds = [];
        this.Visible = true;
        this.Added = false;
        this.enabled = true;
        this.Type = ThemeType.ESRI;
        this.status = ThemeStatus.NEW;
        this.MapData = {};
        rawlayers.forEach((layerInfo) => {
            let layer = new layer_1.Layer(layerInfo, this);
            this.AllLayers.push(layer);
            if (layer.parentLayerId === -1) {
                if (layer.subLayerIds === null) {
                    this.Layers.push(layer);
                }
                else {
                    this.Groups.push(layer);
                }
            }
        });
        this.Groups.forEach((layerGroup) => {
            if (layerGroup.subLayerIds !== null) {
                layerGroup.Layers = [];
                this.AllLayers.forEach((layer) => {
                    if (layerGroup.id === layer.parentLayerId) {
                        layer.parent = layerGroup;
                        layerGroup.Layers.push(layer);
                    }
                });
            }
        });
        this.RecalculateVisibleLayerIds();
    }
}
exports.ArcGIStheme = ArcGIStheme;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJjR0lTdGhlbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcmNHSVN0aGVtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsd0JBQW9CLFNBQVMsQ0FBQyxDQUFBO0FBQzlCLHdCQUFvQixTQUFTLENBQUMsQ0FBQTtBQUM5QixZQUFZLENBQUM7QUFDYiwwQkFBaUMsYUFBSztJQUNsQyxZQUFZLE9BQVksRUFBRSxTQUFjO1FBQ3BDLE9BQU8sQ0FBQztRQUNSLElBQUksU0FBUyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUM7UUFDL0IsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUN2QyxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDO1FBQ3ZDLElBQUksQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxPQUFPLENBQUM7UUFDaEQsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFNBQVMsR0FBRyxFQUFFLENBQUM7UUFDcEIsSUFBSSxDQUFDLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDO1FBQ25DLElBQUksQ0FBQyxHQUFHLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQztRQUN6QixJQUFJLENBQUMsYUFBYSxHQUFHLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQztRQUMxQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLE1BQU0sR0FBRyxXQUFXLENBQUMsR0FBRyxDQUFDO1FBQzlCLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2xCLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTO1lBQ3hCLElBQUksS0FBSyxHQUFHLElBQUksYUFBSyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN2QyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMzQixFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsYUFBYSxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDN0IsRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsS0FBSyxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUM3QixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDNUIsQ0FBQztnQkFBQyxJQUFJLENBQUMsQ0FBQztvQkFDSixJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDNUIsQ0FBQztZQUNMLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsVUFBVTtZQUMzQixFQUFFLENBQUMsQ0FBQyxVQUFVLENBQUMsV0FBVyxLQUFLLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQ2xDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsRUFBRSxDQUFDO2dCQUN2QixJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEtBQUs7b0JBQ3pCLEVBQUUsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxFQUFFLEtBQUssS0FBSyxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7d0JBQ3hDLEtBQUssQ0FBQyxNQUFNLEdBQUcsVUFBVSxDQUFDO3dCQUMxQixVQUFVLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFDbEMsQ0FBQztnQkFDTCxDQUFDLENBQUMsQ0FBQztZQUNQLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO0lBQ3RDLENBQUM7QUFDTCxDQUFDO0FBNUNZLG1CQUFXLGNBNEN2QixDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtUaGVtZX0gZnJvbSAnLi90aGVtZSc7XHJcbmltcG9ydCB7TGF5ZXJ9IGZyb20gJy4vbGF5ZXInO1xyXG4ndXNlIHN0cmljdCc7XHJcbmV4cG9ydCBjbGFzcyBBcmNHSVN0aGVtZSBleHRlbmRzIFRoZW1lIHtcclxuICAgIGNvbnN0cnVjdG9yKHJhd2RhdGE6IGFueSwgdGhlbWVEYXRhOiBhbnkpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIGxldCByYXdsYXllcnMgPSByYXdkYXRhLmxheWVycztcclxuICAgICAgICB0aGlzLk5hYW0gPSByYXdkYXRhLmRvY3VtZW50SW5mby5UaXRsZTtcclxuICAgICAgICB0aGlzLm5hbWUgPSByYXdkYXRhLmRvY3VtZW50SW5mby5UaXRsZTtcclxuICAgICAgICB0aGlzLkRlc2NyaXB0aW9uID0gcmF3ZGF0YS5kb2N1bWVudEluZm8uU3ViamVjdDtcclxuICAgICAgICB0aGlzLkxheWVycyA9IFtdOyAvLyBkZSBsYXllcnMgZGlyZWN0IG9uZGVyIGhldCB0aGVtZSB6b25kZXIgc3VibGF5ZXJzXHJcbiAgICAgICAgdGhpcy5BbGxMYXllcnMgPSBbXTsgLy8gYWxsZSBMYXllcnMgZGllIGhpaiBoZWVmdCBpbmNsdWRpbmcgc3ViZ3JvdXBsYXllcnNcclxuICAgICAgICB0aGlzLkdyb3VwcyA9IFtdOyAvLyBsYXllcmdyb3VwcyBkaWUgbm9nIGVlbnMgbGF5ZXJzIHplbGYgaGViYmVuXHJcbiAgICAgICAgdGhpcy5DbGVhblVybCA9IHRoZW1lRGF0YS5jbGVhblVybDtcclxuICAgICAgICB0aGlzLlVybCA9IHRoZW1lRGF0YS51cmw7XHJcbiAgICAgICAgdGhpcy5WaXNpYmxlTGF5ZXJzID0gW107XHJcbiAgICAgICAgdGhpcy5WaXNpYmxlTGF5ZXJJZHMgPSBbXTtcclxuICAgICAgICB0aGlzLlZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuQWRkZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmVuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuVHlwZSA9IFRoZW1lVHlwZS5FU1JJO1xyXG4gICAgICAgIHRoaXMuc3RhdHVzID0gVGhlbWVTdGF0dXMuTkVXO1xyXG4gICAgICAgIHRoaXMuTWFwRGF0YSA9IHt9O1xyXG4gICAgICAgIHJhd2xheWVycy5mb3JFYWNoKChsYXllckluZm8pID0+IHtcclxuICAgICAgICAgICAgbGV0IGxheWVyID0gbmV3IExheWVyKGxheWVySW5mbywgdGhpcyk7XHJcbiAgICAgICAgICAgIHRoaXMuQWxsTGF5ZXJzLnB1c2gobGF5ZXIpO1xyXG4gICAgICAgICAgICBpZiAobGF5ZXIucGFyZW50TGF5ZXJJZCA9PT0gLTEpIHtcclxuICAgICAgICAgICAgICAgIGlmIChsYXllci5zdWJMYXllcklkcyA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTGF5ZXJzLnB1c2gobGF5ZXIpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkdyb3Vwcy5wdXNoKGxheWVyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuR3JvdXBzLmZvckVhY2goKGxheWVyR3JvdXApID0+IHtcclxuICAgICAgICAgICAgaWYgKGxheWVyR3JvdXAuc3ViTGF5ZXJJZHMgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGxheWVyR3JvdXAuTGF5ZXJzID0gW107XHJcbiAgICAgICAgICAgICAgICB0aGlzLkFsbExheWVycy5mb3JFYWNoKChsYXllcikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChsYXllckdyb3VwLmlkID09PSBsYXllci5wYXJlbnRMYXllcklkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxheWVyLnBhcmVudCA9IGxheWVyR3JvdXA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxheWVyR3JvdXAuTGF5ZXJzLnB1c2gobGF5ZXIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5SZWNhbGN1bGF0ZVZpc2libGVMYXllcklkcygpO1xyXG4gICAgfVxyXG59Il19